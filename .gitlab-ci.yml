variables:
  # CI_DEBUG_TRACE: "1"
  WEB_ROOT: "web"
  REPORT_DIR: "reports"

stages:
  - build
  - tests

# Small repetitive tasks.
.ensure_report:
  - &ensure_report
    mkdir -p ${REPORT_DIR} && chmod -R 777 ${REPORT_DIR}

.default_artifacts: &default_artifacts
  paths:
    - ${REPORT_DIR}/*.html
  # Name will be based on job and branch.
  name: "${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
  # How long do we keep reports files?
  expire_in: 1 day
  # Force artifacts even if the job fail.
  when: always

# Use Node docker image for Eslint.
.node_template: &node_template
  image: node:8-alpine
  before_script:
    - *ensure_report
  cache:
    paths:
    - node_modules/

# Testing template for phpunit, this provide Apache / Php.
.test_template: &test_template
  image: mogtofu33/drupal8ci:8.6
  services:
    - mariadb:latest
  before_script:
    - *ensure_report
    - cp .gitlab-ci/phpunit.xml ${WEB_ROOT}/core/
    - cp .gitlab-ci/settings-ci.php ${WEB_ROOT}/sites/default/settings.php
    - mkdir -p /var/www/html
    - ln -s ${CI_PROJECT_DIR}/${WEB_ROOT} /var/www/html/web
    # Prepare tests folder.
    - mkdir -p "${BROWSERTEST_OUTPUT_DIRECTORY}"
    - chmod -R g+s "${BROWSERTEST_OUTPUT_DIRECTORY}"
    - chown -R www-data:www-data ${WEB_ROOT}
    - apache2-foreground&
    # Import dump from cache if available, or Setup Drupal.
    - mkdir -p ${CI_PROJECT_DIR}/dump;
    - if [ -f "dump/dump.sql" ];
      then
        mysql -hmariadb -uroot drupal < ${CI_PROJECT_DIR}/dump/dump.sql;
      else
        robo setup:drupal;
      fi
  variables:
    MYSQL_ALLOW_EMPTY_PASSWORD: "1"
    MYSQL_DATABASE: "drupal"
    BROWSERTEST_OUTPUT_DIRECTORY: "/var/www/html/web/sites/simpletest"
  artifacts:
    <<: *default_artifacts
    paths:
      - ${REPORT_DIR}/*
  cache:
    key: dump-$CI_BUILD_REF_NAME
    paths:
      - dump

# Sample of a build, considering a Drupal 8 with composer.
# For more samples see
#   https://docs.gitlab.com/ee/ci/examples/deployment/composer-npm-deploy.html
Build:
  stage: build
  image: mogtofu33/drupal8ci:8.6
  script:
    # Download Drupal project, change with install if providing composer.json file.
    - robo download:drupal
    #- robo install:drupal
    # Because create-project need an empty folder we copy the downloaded drupal.
    - cp -rf drupal/* ${CI_PROJECT_DIR} && cp -f drupal/.e* ${CI_PROJECT_DIR} && cp -f drupal/.g* ${CI_PROJECT_DIR}
  artifacts:
    paths:
      # Build files for deploy.
      - vendor
      - web
      - drush
      - scripts
      - composer.json
      - composer.lock
      # Specific to drupal-composer/drupal-project.
      - .env.example
      - load.environment.php
    expire_in: 1 day
  # On build we cache the composer, web and dump folders.
  cache:
    key: drupal-$CI_BUILD_REF_NAME
    paths:
      - drupal

# Job to run Functional tests, require an install.
# WIP https://gitlab.com/MadLittleMods/playing-with-selenium-on-gitlab-ci/blob/master/.gitlab-ci.yml
Functional JS:
  stage: tests
  <<: *test_template
  dependencies:
    - Build
  services:
    - mariadb:latest
    - name: selenium/standalone-chrome-debug:latest
      alias: chromedriver
    - docker:dind
    #- selenium/standalone-firefox:latest
  script:
    - docker ps
    - curl http://chromedriver:4444/wd/hub/status
    - cp .gitlab-ci/.env ${WEB_ROOT}/core/.env || true
    - cd ${WEB_ROOT}/core
    - yarn install
    - yarn test:nightwatch --skiptags core
    #- cp -rf reports/nightwatch ${CI_PROJECT_DIR}/${REPORT_DIR}
  variables:
    MYSQL_ALLOW_EMPTY_PASSWORD: "1"
    MYSQL_DATABASE: "drupal"
    BROWSERTEST_OUTPUT_DIRECTORY: "/var/www/html/web/sites/simpletest"
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    # DRUPAL_TEST_BASE_URL: "http://localhost"
    # DRUPAL_TEST_DB_URL: "mysql://root@mariadb/drupal"
    # DRUPAL_TEST_WEBDRIVER_HOSTNAME: "chromedriver"
    # DRUPAL_TEST_WEBDRIVER_PORT: "9515"
    # DRUPAL_TEST_CHROMEDRIVER_AUTOSTART: "false"
    # DRUPAL_TEST_WEBDRIVER_CHROME_ARGS: "--disable-gpu --headless --no-sandbox"
    # DRUPAL_NIGHTWATCH_OUTPUT: "/var/www/html/${REPORT_DIR}/nightwatch"
    # DRUPAL_NIGHTWATCH_IGNORE_DIRECTORIES: "node_modules,vendor,.*,sites/*/files,sites/*/private,sites/simpletest"
    # DRUPAL_NIGHTWATCH_SEARCH_DIRECTORY: "../modules/custom,../themes/custom"

# Default docker image when not overriden.
image: alpine:latest
